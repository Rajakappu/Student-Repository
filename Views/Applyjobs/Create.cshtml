@model Repository.Models.ApplyJob

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Logout.cshtml";

}

<h2>Apply Jobs</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.JobID, "JobID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("JobID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control", @Value = Session["StudentID"] } })

            @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger", @Value = Session["StudentID"] })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tbl_Student.FirstName, "StudentName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tbl_Student.FirstName, new { htmlAttributes = new { @class = "form-control", @Value = Session["FirstName"] } })

            @Html.ValidationMessageFor(model => model.tbl_Student.FirstName, "", new { @class = "text-danger", @Value = Session["StudentID"] })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tbl_Student.Contact, "PhoneNumber", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tbl_Student.Contact, new { htmlAttributes = new { @class = "form-control", @Value = Session["Contact"] } })

            @Html.ValidationMessageFor(model => model.tbl_Student.Contact, "", new { @class = "text-danger", @Value = Session["Contact"] })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tbl_Student.GraduationID, "Qualification", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tbl_Student.tbl_Graduation.GraduationName, new { htmlAttributes = new { @class = "form-control", @Value = Session["GraduationName"] } })

            @Html.ValidationMessageFor(model => model.tbl_Student.tbl_Graduation.GraduationName, "", new { @class = "text-danger", @Value = Session["GraduationName"] })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tbl_Student.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tbl_Student.Email, new { htmlAttributes = new { @class = "form-control", @Value = Session["Email"] } })

            @Html.ValidationMessageFor(model => model.tbl_Student.Email, "", new { @class = "text-danger", @Value = Session["Email"] })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tbl_Student.City, "City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tbl_Student.City, new { htmlAttributes = new { @class = "form-control", @Value = Session["City"] } })

            @Html.ValidationMessageFor(model => model.tbl_Student.City, "", new { @class = "text-danger", @Value = Session["City"] })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
