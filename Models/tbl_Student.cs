//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class tbl_Student
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public tbl_Student()
        {
            this.ApplyJobs = new HashSet<ApplyJob>();
            this.tbl_Apply = new HashSet<tbl_Apply>();
        }
    
        public int StudentID { get; set; }
        [Required]
        //[StringLength(10, MinimumLength = 25)]
        [Display(Name = "FirstName")]
        //[RegularExpression(@"(\S\D)+", ErrorMessage = "Space and numbers not allowed")]
        [RegularExpression(@"^[A-Za-z ]+$", ErrorMessage = "Please Enter Alpbabets only.")]


        public string FirstName { get; set; }
        [Required]
        //[StringLength(10, MinimumLength = 25)]
        [Display(Name = "LastName")]
        [RegularExpression(@"^[A-Za-z ]+$", ErrorMessage = "Please Enter Alpbabets only.")]

        public string LastName { get; set; }
        [Required(ErrorMessage = "Enter your Father'sName")]
        [RegularExpression(@"^[A-Za-z ]+$", ErrorMessage = "Please Enter Alpbabets only.")]

        public string FatherName { get; set; }
        [Required(ErrorMessage = "Enter your DateofBirth")]
        [DataType(DataType.Date)]
        [Range(typeof(DateTime), "01/10/1900", "01/12/2000",ErrorMessage ="Below 18 years age not allowed")]
        public Nullable<System.DateTime> DateofBirth { get; set; }
        [Required(ErrorMessage = "Enter your Qualification")]

        public Nullable<int> GraduationID { get; set; }
        [Required(ErrorMessage = "Enter your Percentage")]

        public Nullable<int> Percentage { get; set; }
        [Required(ErrorMessage = "Mobile No cannot be empty")]
        [RegularExpression(@"^[6-9]\d{9}((?!-,+).)*$", ErrorMessage = "Mobile Number Starts with 6|7|8|9 and Must contains 10")]
        [Remote("IsMobileNoAlreadyExists", "Login", HttpMethod = "POST", ErrorMessage = "Mobile Number Already Registered")]
        [DataType(DataType.PhoneNumber)]

        public string Contact { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid Email Address.")]
        [Remote("IsAlreadySigned", "Login", HttpMethod = "POST", ErrorMessage = "EmailId already exists.")]

        public string Email { get; set; }
        [RegularExpression(@"^(?=(.*[a-z]){1,})(?=(.*[\d]){1,})(?=(.*[\W]){1,})(?!.*\s).{7,30}$",
         ErrorMessage = "Password must have one Special character and 1 numeric and 1 uppercase and must have min 8 characters long")]
        public string Password { get; set; }
        [Required(ErrorMessage = "Enter your City")]

        public string City { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplyJob> ApplyJobs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<tbl_Apply> tbl_Apply { get; set; }
        public virtual tbl_Graduation tbl_Graduation { get; set; }
    }
}
